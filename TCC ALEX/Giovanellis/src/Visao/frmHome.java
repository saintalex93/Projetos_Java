/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import giovanellis.ConectaBanco;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import Modelo.ModeloBackup;
import Controlador.ControladorBackup;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.plaf.metal.MetalButtonUI;

//import net.sf.jasperreports.engine.JRResultSetDataSource;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.view.JasperViewer;

public class frmHome extends javax.swing.JFrame {

    ModeloBackup modBack;
    ControladorBackup controBack;
    frmCalculadora calculadora;
    ConectaBanco con;

    /**
     * Creates new form frmHome
     */
    public frmHome() throws Exception {
        calculadora = new frmCalculadora();
        modBack = new ModeloBackup();
        controBack = new ControladorBackup();
        setUndecorated(true);
        //Color Branco = new Color(255,255,255); 
        this.setExtendedState(MAXIMIZED_BOTH);

        con = new ConectaBanco();

        this.setIconImage(new ImageIcon(getClass().getResource("/Imagens/Icone.png")).getImage());

        initComponents();
        Color Fundo = new Color(238, 235, 227);
        Color Laranja = new Color(242, 184, 171);
        Color Roxo = new Color(88, 55, 66);
        getContentPane().setBackground(Fundo);
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Tahoma", Font.BOLD, 16)));
        UIManager.put("OptionPane.messageForeground", Roxo);

        btnLembrete.setUI(new MetalButtonUI());
        btnMensagem.setUI(new MetalButtonUI());
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        lblNomeFuncionario = new javax.swing.JLabel();
        btnLembrete = new javax.swing.JButton();
        btnMensagem = new javax.swing.JButton();
        lblIcone = new javax.swing.JLabel();
        MenuTopo = new javax.swing.JMenuBar();
        MenuPedidos = new javax.swing.JMenu();
        MenuPromocao = new javax.swing.JMenu();
        MenuInsumo = new javax.swing.JMenu();
        MenuProduto = new javax.swing.JMenu();
        MenuFornecedores = new javax.swing.JMenu();
        MenuFuncionarios = new javax.swing.JMenu();
        GerenciarUsuario = new javax.swing.JMenuItem();
        LancamentoDespesa = new javax.swing.JMenuItem();
        MenuDespesas = new javax.swing.JMenu();
        MenuCadastrar = new javax.swing.JCheckBoxMenuItem();
        MenuLancar = new javax.swing.JCheckBoxMenuItem();
        MenuRelatorios = new javax.swing.JMenu();
        MenuFerramentas = new javax.swing.JMenu();
        menuBackup = new javax.swing.JMenuItem();
        menuCalculadora = new javax.swing.JMenuItem();
        MenuMensagens = new javax.swing.JMenuItem();
        menuAnotacoes = new javax.swing.JMenuItem();
        MenuSair1 = new javax.swing.JMenu();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Giovanelli's");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        lblNomeFuncionario.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblNomeFuncionario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        getContentPane().add(lblNomeFuncionario);
        lblNomeFuncionario.setBounds(0, 0, 1320, 30);

        btnLembrete.setBackground(new java.awt.Color(238, 235, 227));
        btnLembrete.setForeground(new java.awt.Color(238, 235, 227));
        btnLembrete.setOpaque(false);
        btnLembrete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLembreteActionPerformed(evt);
            }
        });
        getContentPane().add(btnLembrete);
        btnLembrete.setBounds(10, 60, 120, 100);

        btnMensagem.setBackground(new java.awt.Color(238, 235, 227));
        btnMensagem.setForeground(new java.awt.Color(238, 235, 227));
        btnMensagem.setOpaque(false);
        btnMensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMensagemActionPerformed(evt);
            }
        });
        getContentPane().add(btnMensagem);
        btnMensagem.setBounds(10, 170, 120, 100);

        lblIcone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIcone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/marcaTimer.png"))); // NOI18N
        getContentPane().add(lblIcone);
        lblIcone.setBounds(0, -30, 1310, 920);

        MenuTopo.setAutoscrolls(true);
        MenuTopo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MenuTopo.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        MenuTopo.setPreferredSize(new java.awt.Dimension(517, 70));

        MenuPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/papers7.png"))); // NOI18N
        MenuPedidos.setText("Pedidos");
        MenuPedidos.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuPedidos.setMaximumSize(new java.awt.Dimension(120, 32767));
        MenuPedidos.setPreferredSize(new java.awt.Dimension(115, 20));
        MenuPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPedidosMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuPedidos);

        MenuPromocao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/discount4 cópia.png"))); // NOI18N
        MenuPromocao.setText("Promoções");
        MenuPromocao.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuPromocao.setMaximumSize(new java.awt.Dimension(150, 32767));
        MenuPromocao.setPreferredSize(new java.awt.Dimension(140, 19));
        MenuPromocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPromocaoMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuPromocao);

        MenuInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/shopping-cart16.png"))); // NOI18N
        MenuInsumo.setText("Insumos");
        MenuInsumo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuInsumo.setPreferredSize(new java.awt.Dimension(130, 55));
        MenuInsumo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuInsumoMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuInsumo);

        MenuProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/italian1.png"))); // NOI18N
        MenuProduto.setText("Produtos");
        MenuProduto.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuProduto.setPreferredSize(new java.awt.Dimension(125, 45));
        MenuProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuProdutoMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuProduto);

        MenuFornecedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delivery22.png"))); // NOI18N
        MenuFornecedores.setText("Fornecedores");
        MenuFornecedores.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuFornecedores.setMaximumSize(new java.awt.Dimension(170, 32767));
        MenuFornecedores.setPreferredSize(new java.awt.Dimension(150, 50));
        MenuFornecedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuFornecedoresMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuFornecedores);

        MenuFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/office.png"))); // NOI18N
        MenuFuncionarios.setText("Funcionários");
        MenuFuncionarios.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuFuncionarios.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        MenuFuncionarios.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MenuFuncionarios.setMaximumSize(new java.awt.Dimension(170, 32767));
        MenuFuncionarios.setPreferredSize(new java.awt.Dimension(150, 55));

        GerenciarUsuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GerenciarUsuario.setText("Gerenciar de Permissões");
        GerenciarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GerenciarUsuarioMouseClicked(evt);
            }
        });
        GerenciarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GerenciarUsuarioActionPerformed(evt);
            }
        });
        MenuFuncionarios.add(GerenciarUsuario);

        LancamentoDespesa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LancamentoDespesa.setText("Lançamento de Despesa");
        LancamentoDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LancamentoDespesaActionPerformed(evt);
            }
        });
        MenuFuncionarios.add(LancamentoDespesa);

        MenuTopo.add(MenuFuncionarios);

        MenuDespesas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/piggy10.png"))); // NOI18N
        MenuDespesas.setText("Despesas");
        MenuDespesas.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuDespesas.setPreferredSize(new java.awt.Dimension(130, 50));

        MenuCadastrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MenuCadastrar.setText("Cadastrar");
        MenuCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuCadastrarMouseClicked(evt);
            }
        });
        MenuCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarActionPerformed(evt);
            }
        });
        MenuDespesas.add(MenuCadastrar);

        MenuLancar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MenuLancar.setText("Lançar/Consultar");
        MenuLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuLancarActionPerformed(evt);
            }
        });
        MenuDespesas.add(MenuLancar);

        MenuTopo.add(MenuDespesas);

        MenuRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Relatorios.png"))); // NOI18N
        MenuRelatorios.setText("Relatórios");
        MenuRelatorios.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuRelatorios.setMaximumSize(new java.awt.Dimension(150, 250));
        MenuRelatorios.setName(""); // NOI18N
        MenuRelatorios.setPreferredSize(new java.awt.Dimension(130, 50));
        MenuRelatorios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuRelatoriosMouseClicked(evt);
            }
        });
        MenuTopo.add(MenuRelatorios);

        MenuFerramentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Ferramentas.png"))); // NOI18N
        MenuFerramentas.setText("Ferramentas");
        MenuFerramentas.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuFerramentas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MenuFerramentas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MenuFerramentas.setMaximumSize(new java.awt.Dimension(160, 32767));
        MenuFerramentas.setPreferredSize(new java.awt.Dimension(150, 45));

        menuBackup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK));
        menuBackup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        menuBackup.setText("Backup");
        menuBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBackupActionPerformed(evt);
            }
        });
        MenuFerramentas.add(menuBackup);

        menuCalculadora.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        menuCalculadora.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        menuCalculadora.setText("Calculadora");
        menuCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCalculadoraActionPerformed(evt);
            }
        });
        MenuFerramentas.add(menuCalculadora);

        MenuMensagens.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK));
        MenuMensagens.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MenuMensagens.setText("Mensagens");
        MenuMensagens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMensagensActionPerformed(evt);
            }
        });
        MenuFerramentas.add(MenuMensagens);

        menuAnotacoes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
        menuAnotacoes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        menuAnotacoes.setText("Anotações");
        menuAnotacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAnotacoesActionPerformed(evt);
            }
        });
        MenuFerramentas.add(menuAnotacoes);

        MenuTopo.add(MenuFerramentas);

        MenuSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_sair2.png"))); // NOI18N
        MenuSair1.setText("Sair");
        MenuSair1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MenuSair1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MenuSair1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MenuSair1.setMaximumSize(new java.awt.Dimension(150, 32767));
        MenuSair1.setPreferredSize(new java.awt.Dimension(90, 45));
        MenuSair1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuSair1MouseClicked(evt);
            }
        });
        MenuTopo.add(MenuSair1);

        setJMenuBar(MenuTopo);

        setSize(new java.awt.Dimension(1376, 946));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        System.out.println(frmLogin.nomeFuncionario);
        lblNomeFuncionario.setText("  Usuário: " + frmLogin.nomeFuncionario);
        lblIcone.setSize(getWidth(), getHeight());
        CodPermFun = frmLogin.getPermissaoFunci();
        timer.start();
        timerAtualizavel.start();
        DataAtual();

        if (CodPermFun == 1) {
            GerenciarUsuario.setVisible(true);
        } else {
            GerenciarUsuario.setVisible(false);
        }


    }//GEN-LAST:event_formWindowOpened

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        //System.out.println("Yeah");
       // System.out.println(contador);

        contador = 20;


    }//GEN-LAST:event_formMouseMoved

    private void MenuPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPedidosMouseClicked
        if (binario == 1) {
            aviso();

        } else {

            try {

                new frmPedidos().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_MenuPedidosMouseClicked

    private void MenuPromocaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPromocaoMouseClicked
        if (binario == 1) {
            aviso();

        } else {
            try {

                new frmPromocoes().setVisible(true);
                binario = 1;

            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_MenuPromocaoMouseClicked

    private void MenuInsumoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuInsumoMouseClicked
        if (binario == 1) {
            aviso();

        } else {
            try {

                new frmInsumos().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_MenuInsumoMouseClicked

    private void MenuProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuProdutoMouseClicked
        if (binario == 1) {
            aviso();

        } else {
            try {
                new frmProdutos().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_MenuProdutoMouseClicked

    private void MenuFornecedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuFornecedoresMouseClicked
        if (binario == 1) {
            aviso();

        } else {
            try {
                new frmFornecedores().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_MenuFornecedoresMouseClicked

    private void MenuCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuCadastrarMouseClicked
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmCadastrarDespesa().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MenuCadastrarMouseClicked

    private void MenuCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarActionPerformed
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmCadastrarDespesa().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MenuCadastrarActionPerformed

    private void MenuLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuLancarActionPerformed
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmDespesas().setVisible(true);
                binario = 1;

            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MenuLancarActionPerformed

    private void LancamentoDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LancamentoDespesaActionPerformed
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmFuncionarios().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_LancamentoDespesaActionPerformed

    private void MenuRelatoriosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuRelatoriosMouseClicked
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmRelatorios().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MenuRelatoriosMouseClicked

    private void GerenciarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GerenciarUsuarioMouseClicked
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmSenhaFuncionarios().setVisible(true);
                binario = 1;
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GerenciarUsuarioMouseClicked

    private void GerenciarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GerenciarUsuarioActionPerformed
        if (binario == 1) {
            aviso();

        } else {

            try {
                new frmSenhaFuncionarios().setVisible(true);
                binario = 1;

            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GerenciarUsuarioActionPerformed

    private void MenuSair1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSair1MouseClicked

        if (binario == 1) {
            aviso();

        } else {

            Icon figura = new ImageIcon(getToolkit().createImage(getClass().getResource("/Imagens/login.png")));
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja Sair do Sistema?", "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, figura);
            binario = 1;
            if (opcao == JOptionPane.YES_OPTION) {

                System.exit(0);
                con.desconecta();

            }
            if (opcao == JOptionPane.NO_OPTION) {

                binario = 0;

            }
            if (opcao == JOptionPane.CANCEL_OPTION) {

                binario = 0;

            }
            if (opcao == JOptionPane.CLOSED_OPTION) {

                binario = 0;

            }
        }

        // JOptionPane.showConfirmDialog(null, "Deseja Sair","Sair", JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);

    }//GEN-LAST:event_MenuSair1MouseClicked

    private void MenuMensagensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMensagensActionPerformed
        if (binario == 1) {
            aviso();

        } else {
            try {
                binario = 1;
                new frmCorreio().setVisible(true);       // TODO add your handling code here:
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_MenuMensagensActionPerformed

    private void menuBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBackupActionPerformed
        if (binario == 1) {
            aviso();

        } else {

            if (CodPermFun == 1) {

                binario = 0;

                File pdf = null;
                JFileChooser chooser = null;

                try {
                    pdf = File.createTempFile("NomedoArquivoSemExtensão", ".bak");
                } catch (IOException e1) {
                    e1.printStackTrace();
                }

//Geração do arquivo
                chooser = new JFileChooser();
                chooser.setCurrentDirectory(pdf);
                chooser.setSelectedFile(pdf);
                javax.swing.filechooser.FileFilter filter = new javax.swing.filechooser.FileFilter() {

                    public boolean accept(File f) {
                        return f.isDirectory()
                                || f.getName().toLowerCase().endsWith(
                                        ".bak");
                    }

                    public String getDescription() {
                        return "(*.bak)";
                        // return "(*.xls)";  
                    }
                };
                chooser.addChoosableFileFilter(filter);
                chooser.setAcceptAllFileFilterUsed(false);
                chooser.setMultiSelectionEnabled(false);

                caminho = "";

                int retorno = chooser.showSaveDialog(null);
                if (retorno == JFileChooser.APPROVE_OPTION) {
                    caminho = chooser.getSelectedFile().getAbsolutePath();
                }

                if (!caminho.equals("")) {
                    boolean ok = pdf.renameTo(new File(caminho));
                    if (ok) {
                        try {
                            if (preencherObjeto()) {

                                controBack.Incluir(modBack);
                                JOptionPane.showMessageDialog(this, "Backup Realizado com Sucesso \nCaminho: " + caminho);
                                frmHome.binario = 0;
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, "Erro ao salvar Backup:" + ex);
                            frmHome.binario = 0;
                        }
                    }

                } else {
                    //throw new FileNaoSelecionadoException();
                    JOptionPane.showMessageDialog(this, "Backup cancelado");
                    frmHome.binario = 0;
                }

            } else {
                Icon figura = new ImageIcon(getToolkit().createImage(getClass().getResource("/Imagens/BackupCancelado.png")));

                JOptionPane JOP = new JOptionPane("Permissão negada para efetuar o backup. \n Contate o administrador do sistema.", JOptionPane.INFORMATION_MESSAGE, JOptionPane.PLAIN_MESSAGE, figura);
                JDialog DIALOGO = JOP.createDialog("Aviso");

                DIALOGO.setResizable(false);
                DIALOGO.setAlwaysOnTop(true); //<-- this line
                DIALOGO.setModal(true);

                //
                DIALOGO.setVisible(true);

            }
        }

    }//GEN-LAST:event_menuBackupActionPerformed

    private void menuCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCalculadoraActionPerformed

        calculadora.setVisible(true);


    }//GEN-LAST:event_menuCalculadoraActionPerformed

    private void menuAnotacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAnotacoesActionPerformed

        if (binario == 1) {
            aviso();

        } else {
            try {
                binario = 1;
                Mensagem = 0;
                new frmAnotacoes().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_menuAnotacoesActionPerformed

    private void btnLembreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLembreteActionPerformed

        if (binario == 1) {
            aviso();

        } else {
            try {
                binario = 1;
                Mensagem = 1;
                new frmAnotacoes().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnLembreteActionPerformed

    private void btnMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMensagemActionPerformed
         if (binario == 1) {
            aviso();

        } else {
        
        try {
            binario = 1;
            new frmCorreio().setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }}
    }//GEN-LAST:event_btnMensagemActionPerformed

    String caminho;
    public static int CodPermFun = 0;
    public static int contador = 20;
    int contadorIcones = 2;
    int contadorMensagem = 2;
    public static int contadorArea = 3;

    public void escreva() {
        System.out.println(contador);

    }

    public void escrevaIcones() {
        System.out.println(contadorIcones);

    }

    private javax.swing.Timer timer = new javax.swing.Timer(60*1000, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {

            if (contador == 20) {
                try {
                    
                
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer.png"));
                ImageIcon icone = new ImageIcon(troca);

                lblIcone.setIcon(icone);
                } catch (Exception u) {
                }
            }
            if (contador == 10) {
                try {
                    
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer1.png"));
                ImageIcon icone = new ImageIcon(troca);

                lblIcone.setIcon(icone);
                } catch (Exception p) {
                }
            }

            if (contador == 5) {
                try {
                    
                
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer2.png"));
                ImageIcon icone = new ImageIcon(troca);

                lblIcone.setIcon(icone);
                } catch (Exception q) {
                }
            }

            if (contador == 3) {
                try {
                    
                
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer3.png"));
                ImageIcon icone = new ImageIcon(troca);

                lblIcone.setIcon(icone);
                } catch (Exception w) {
                }
            }

            if (contador == 2) {
                try {
                    
                
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer4.png"));
                ImageIcon icone = new ImageIcon(troca);
                //  icone.setImage(troca.getScaledInstance(lblTimer.getWidth(), lblTimer.getHeight(), Image.SCALE_FAST));                
                lblIcone.setIcon(icone);
                } catch (Exception t) {
                }
            }

            if (contador == 0) {
                try{
                Image troca;
                troca = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/marcaTimer4.png"));
                ImageIcon icone = new ImageIcon(troca);

                lblIcone.setIcon(icone);
                JOptionPane op = new JOptionPane("Sistema Fechado por Inatividade", JOptionPane.INFORMATION_MESSAGE);
                JDialog dialog = op.createDialog("Aviso");
                dialog.setAlwaysOnTop(true); //<-- this line
                dialog.setModal(true);

                //
                dialog.setVisible(true);
//                JOptionPane.showMessageDialog(null, "Sistema Fechado por Inatividade");
                timer.stop();
                dispose();
                
                } catch (Exception y) {
                }
                try {
                    new frmLogin().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            escreva();
            contador--;
        }
    });

    private javax.swing.Timer timerLembrete = new javax.swing.Timer(500, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {

            if (contadorMensagem == 2) {
                Image Mensage;
                Mensage = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/Lembrete1.png"));
                ImageIcon icone = new ImageIcon(Mensage);
                btnLembrete.setIcon(icone);

            }
            if (contadorMensagem == 1) {
                Image Mensage;
                Mensage = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/LEmbrete2.png"));
                ImageIcon icone = new ImageIcon(Mensage);
                btnLembrete.setIcon(icone);

            }

            contadorMensagem--;

            if (contadorMensagem == 0) {
                contadorMensagem = 2;

            }

        }
    });

    private javax.swing.Timer timerMensagem = new javax.swing.Timer(500, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {

            if (contadorIcones == 2) {
                Image Mensage;
                Mensage = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/email2.png"));
                ImageIcon icone = new ImageIcon(Mensage);
                btnMensagem.setIcon(icone);

            }
            if (contadorIcones == 1) {
                Image Mensage;
                Mensage = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/email1.png"));
                ImageIcon icone = new ImageIcon(Mensage);
                btnMensagem.setIcon(icone);

            }

            escrevaIcones();
            contadorIcones--;

            if (contadorIcones == 0) {
                contadorIcones = 2;

            }

        }
    });

    private javax.swing.Timer timerAtualizavel = new javax.swing.Timer(500, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {

            if (contadorArea == 1) {
                ContaLinhaLembrete("select count(codLembrete) as contagem from lembretes where DataAviso = '" + DataAtual + "' and aviso = 1 and codFuncionario = '" + frmLogin.codFuncionario + "'");
                ContaLinhaMensagem("select count(codMensagem) as contagem from mensagens where DataCriacao = '" + DataAtual +"' and aviso = 1 and codDestinatario = '" + frmLogin.codFuncionario + "'");
            }

            contadorArea--;

            if (contadorArea == 0) {
                contadorArea = 10;

            }

        }
    });

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    new frmHome().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem GerenciarUsuario;
    private javax.swing.JMenuItem LancamentoDespesa;
    private javax.swing.JCheckBoxMenuItem MenuCadastrar;
    private javax.swing.JMenu MenuDespesas;
    private javax.swing.JMenu MenuFerramentas;
    private javax.swing.JMenu MenuFornecedores;
    private javax.swing.JMenu MenuFuncionarios;
    private javax.swing.JMenu MenuInsumo;
    private javax.swing.JCheckBoxMenuItem MenuLancar;
    private javax.swing.JMenuItem MenuMensagens;
    private javax.swing.JMenu MenuPedidos;
    private javax.swing.JMenu MenuProduto;
    private javax.swing.JMenu MenuPromocao;
    private javax.swing.JMenu MenuRelatorios;
    private javax.swing.JMenu MenuSair1;
    private javax.swing.JMenuBar MenuTopo;
    private javax.swing.JButton btnLembrete;
    private javax.swing.JButton btnMensagem;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel lblIcone;
    private javax.swing.JLabel lblNomeFuncionario;
    private javax.swing.JMenuItem menuAnotacoes;
    private javax.swing.JMenuItem menuBackup;
    private javax.swing.JMenuItem menuCalculadora;
    // End of variables declaration//GEN-END:variables
public static int binario = 0;
    String DataAtual;
    public static int Mensagem = 0;

    public void DesabilitarBotoes() {
        MenuCadastrar.setVisible(false);
        MenuDespesas.setVisible(false);
        MenuFornecedores.setVisible(false);
        MenuFuncionarios.setVisible(false);
        MenuInsumo.setVisible(false);
        MenuLancar.setVisible(false);
        MenuPedidos.setVisible(false);
        MenuProduto.setVisible(false);
        MenuPromocao.setEnabled(false);
        MenuRelatorios.setVisible(false);
        MenuFerramentas.setVisible(false);

    }

    public void HabilitarBotoes() {
        MenuCadastrar.setEnabled(true);
        MenuDespesas.setEnabled(true);
        MenuFornecedores.setEnabled(true);
        MenuFuncionarios.setEnabled(true);
        MenuInsumo.setEnabled(true);
        MenuLancar.setEnabled(true);
        MenuPedidos.setEnabled(true);
        MenuProduto.setEnabled(true);
        MenuPromocao.setEnabled(true);
        MenuRelatorios.setEnabled(true);
        MenuFerramentas.setEnabled(true);

    }

    public boolean preencherObjeto() {
        modBack.setCaminho(caminho);

        return true;
    }

    public void aviso() {
        Icon figura = new ImageIcon(getToolkit().createImage(getClass().getResource("/Imagens/FormularioAviso.png")));
        JOptionPane JOP = new JOptionPane("Feche um formulário para abrir outro!", JOptionPane.INFORMATION_MESSAGE, JOptionPane.PLAIN_MESSAGE, figura);
        JDialog DIALOGO = JOP.createDialog("Aviso");
        DIALOGO.setResizable(false);
        DIALOGO.setAlwaysOnTop(true);
        DIALOGO.setModal(true);
        DIALOGO.setVisible(true);

    }

    public boolean ContaLinhaLembrete(String Sql) {

        con.executaSql(Sql);
        try {
            con.rs.first();
            do {

                if (con.rs.getInt("contagem") >= 1) {

                    timerLembrete.start();
                    btnLembrete.setVisible(true);
                    btnLembrete.setEnabled(true);

                    return true;
                } else {
                    btnLembrete.setVisible(false);
                    btnLembrete.setEnabled(false);
                    return false;
                }

            } while (con.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro de aviso de Lembrete:" + e);

        }

        return true;
    }

    public boolean ContaLinhaMensagem(String Sql) {

        con.executaSql(Sql);
        try {
            con.rs.first();
            do {

                if (con.rs.getInt("contagem") >= 1) {

                    timerMensagem.start();
                    btnMensagem.setVisible(true);
                    btnMensagem.setEnabled(true);

                    return true;
                } else {
                    btnMensagem.setVisible(false);
                    btnMensagem.setEnabled(false);
                    return false;
                }

            } while (con.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro de aviso de Mensagem:" + e);

        }

        return true;
    }

    private String DataAtual() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        DataAtual = dateFormat.format(date);
        return dateFormat.format(date);
    }

}
