/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controlador.ControladorMensagens;
import Modelo.ModeloMensagens;
import Modelo.ModeloTabelas;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import giovanellis.ConectaBanco;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Alex
 */
public class frmCorreio extends javax.swing.JFrame {

    ModeloMensagens modMen;
    ControladorMensagens objMensagem;
    ConectaBanco conn;
    SimpleDateFormat dt;
    SimpleDateFormat hr;
    String DataAtual = DataAtual();

    /**
     * Creates new form frmCorreio
     *
     * @throws java.lang.Exception
     */
    public frmCorreio() throws Exception {
        modMen = new ModeloMensagens();
        objMensagem = new ControladorMensagens(conn, null, null);
        setAlwaysOnTop(true);
        Color Fundo = new Color(238, 235, 227);
        getContentPane().setBackground(Fundo);
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagens/Icone.png")).getImage());

        dt = new SimpleDateFormat("dd/MM/yyyy");
        conn = new ConectaBanco();

        initComponents();
        btnCancelar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblAssunto1 = new javax.swing.JLabel();
        lblDestinatario2 = new javax.swing.JLabel();
        lblDestinatario3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        JtxtMensagem1 = new javax.swing.JTextArea();
        lblHora = new javax.swing.JLabel();
        lblAssunto = new javax.swing.JLabel();
        lblDestinatario = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        btnResponder = new javax.swing.JButton();
        btnEncaminhar = new javax.swing.JButton();
        jdcDataInicial = new com.toedter.calendar.JDateChooser();
        jdcDataFinal = new com.toedter.calendar.JDateChooser();
        btnFiltrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtableHojeRecebidas = new javax.swing.JTable();
        lblTituloRecebidas = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JtableAntigasRecebidas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JtableHojeEnviadas = new javax.swing.JTable();
        lblTituloEnviadas = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        JtableAntigasEnviadas = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAssunto1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAssunto1.setForeground(new java.awt.Color(88, 55, 66));
        lblAssunto1.setText("Assunto:");
        jPanel2.add(lblAssunto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));

        lblDestinatario2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDestinatario2.setForeground(new java.awt.Color(88, 55, 66));
        lblDestinatario2.setText("Destinat√°rio:");
        jPanel2.add(lblDestinatario2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 45, -1, -1));

        lblDestinatario3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDestinatario3.setForeground(new java.awt.Color(88, 55, 66));
        lblDestinatario3.setText("Enviada em:");
        jPanel2.add(lblDestinatario3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 77, -1, -1));

        JtxtMensagem1.setColumns(20);
        JtxtMensagem1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        JtxtMensagem1.setRows(5);
        jScrollPane5.setViewportView(JtxtMensagem1);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 420, 330));

        lblHora.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHora.setForeground(new java.awt.Color(239, 111, 83));
        lblHora.setText("   ");
        jPanel2.add(lblHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 77, 50, -1));

        lblAssunto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAssunto.setForeground(new java.awt.Color(239, 111, 83));
        lblAssunto.setText(" ");
        jPanel2.add(lblAssunto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 13, 210, -1));

        lblDestinatario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDestinatario.setForeground(new java.awt.Color(239, 111, 83));
        lblDestinatario.setText(" ");
        jPanel2.add(lblDestinatario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 45, 210, -1));

        lblData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblData.setForeground(new java.awt.Color(239, 111, 83));
        lblData.setText("   ");
        jPanel2.add(lblData, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 77, 70, -1));

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(239, 111, 83));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jPanel2.add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 100, 30));

        btnResponder.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnResponder.setForeground(new java.awt.Color(239, 111, 83));
        btnResponder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnResponder.setText("Responder");
        btnResponder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnResponder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponderActionPerformed(evt);
            }
        });
        jPanel2.add(btnResponder, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 100, 30));

        btnEncaminhar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEncaminhar.setForeground(new java.awt.Color(239, 111, 83));
        btnEncaminhar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnEncaminhar.setText("Encaminhar");
        btnEncaminhar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEncaminhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncaminharActionPerformed(evt);
            }
        });
        jPanel2.add(btnEncaminhar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 100, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 46, 440, 440));

        jdcDataInicial.setOpaque(false);
        getContentPane().add(jdcDataInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, 120, -1));

        jdcDataFinal.setOpaque(false);
        getContentPane().add(jdcDataFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 43, 120, -1));

        btnFiltrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(239, 111, 83));
        btnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 80, 100, 40));

        jLabel6.setBackground(new java.awt.Color(88, 55, 66));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(239, 111, 83));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Giovanelli's Correio's");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 32));

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setOpaque(false);

        jLabel4.setBackground(new java.awt.Color(88, 55, 66));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(239, 111, 83));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hoje");
        jLabel4.setOpaque(true);

        JtableHojeRecebidas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JtableHojeRecebidas.setForeground(new java.awt.Color(88, 55, 66));
        JtableHojeRecebidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtableHojeRecebidas.setSelectionBackground(new java.awt.Color(88, 55, 66));
        JtableHojeRecebidas.setSelectionForeground(new java.awt.Color(242, 184, 171));
        JtableHojeRecebidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableHojeRecebidasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JtableHojeRecebidas);

        lblTituloRecebidas.setBackground(new java.awt.Color(88, 55, 66));
        lblTituloRecebidas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTituloRecebidas.setForeground(new java.awt.Color(239, 111, 83));
        lblTituloRecebidas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloRecebidas.setText("Mais Antigas");
        lblTituloRecebidas.setOpaque(true);

        JtableAntigasRecebidas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JtableAntigasRecebidas.setForeground(new java.awt.Color(88, 55, 66));
        JtableAntigasRecebidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtableAntigasRecebidas.setSelectionBackground(new java.awt.Color(88, 55, 66));
        JtableAntigasRecebidas.setSelectionForeground(new java.awt.Color(242, 184, 171));
        JtableAntigasRecebidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableAntigasRecebidasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JtableAntigasRecebidas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(lblTituloRecebidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTituloRecebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Recebidas", jPanel1);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setBackground(new java.awt.Color(88, 55, 66));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(239, 111, 83));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Hoje");
        jLabel7.setOpaque(true);
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));

        JtableHojeEnviadas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JtableHojeEnviadas.setForeground(new java.awt.Color(88, 55, 66));
        JtableHojeEnviadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtableHojeEnviadas.setSelectionBackground(new java.awt.Color(88, 55, 66));
        JtableHojeEnviadas.setSelectionForeground(new java.awt.Color(242, 184, 171));
        JtableHojeEnviadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableHojeEnviadasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(JtableHojeEnviadas);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 46, 400, 122));

        lblTituloEnviadas.setBackground(new java.awt.Color(88, 55, 66));
        lblTituloEnviadas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTituloEnviadas.setForeground(new java.awt.Color(239, 111, 83));
        lblTituloEnviadas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloEnviadas.setText("Mais Antigas");
        lblTituloEnviadas.setOpaque(true);
        jPanel3.add(lblTituloEnviadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 179, 400, 40));

        JtableAntigasEnviadas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JtableAntigasEnviadas.setForeground(new java.awt.Color(88, 55, 66));
        JtableAntigasEnviadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtableAntigasEnviadas.setSelectionBackground(new java.awt.Color(88, 55, 66));
        JtableAntigasEnviadas.setSelectionForeground(new java.awt.Color(242, 184, 171));
        JtableAntigasEnviadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableAntigasEnviadasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(JtableAntigasEnviadas);

        jPanel3.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 225, 400, 110));

        jTabbedPane1.addTab("Enviadas", jPanel3);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 400, -1));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(239, 111, 83));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 80, 100, 40));

        jMenu4.setText("Nova Mensagem");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });
        jMenuBar2.add(jMenu4);

        jMenu1.setText("Receber/Enviar Mensagens");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        setSize(new java.awt.Dimension(879, 573));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        timer.start();
        timerAtualizavel.start();
        ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
        ContaLinhaHojeEnviadas("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaEnviada("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");

        desabilitabotoes();
    }//GEN-LAST:event_formWindowOpened

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed

    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        try {
            TipoResposta = 0;
            new frmNovoEmail().setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(frmCorreio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
        ContaLinhaHojeEnviadas("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaEnviada("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
    }//GEN-LAST:event_jMenu1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        timerAtualizavel.stop();
        timer.stop();
        frmHome.contador = 10;
        frmHome.binario = 0;
        conn.desconecta();
    }//GEN-LAST:event_formWindowClosing

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        frmHome.contador = 20;
        contador = 10;          // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void JtableHojeRecebidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableHojeRecebidasMouseClicked
        HabilitaBotoes();
        btnResponder.setVisible(true);
        btnEncaminhar.setVisible(false);
        btnExcluir.setEnabled(true);

        try {

            btnResponder.setVisible(true);
            btnEncaminhar.setVisible(false);
            int linha_selecionada = JtableHojeRecebidas.getSelectedRow();
            codMensagem = Integer.parseInt(JtableHojeRecebidas.getValueAt(linha_selecionada, 6).toString());
            NomeRemetente = (JtableHojeRecebidas.getValueAt(linha_selecionada, 0).toString());
            lblAssunto.setText(JtableHojeRecebidas.getValueAt(linha_selecionada, 1).toString());
            lblDestinatario.setText(JtableHojeRecebidas.getValueAt(linha_selecionada, 0).toString());
            lblHora.setText(JtableHojeRecebidas.getValueAt(linha_selecionada, 3).toString());
            lblData.setText(JtableHojeRecebidas.getValueAt(linha_selecionada, 2).toString());
            JtxtMensagem1.setText(JtableHojeRecebidas.getValueAt(linha_selecionada, 4).toString());
            codRemetenteResponder = Integer.parseInt(JtableHojeRecebidas.getValueAt(linha_selecionada, 7).toString());

            if (JtableHojeRecebidas.getValueAt(linha_selecionada, 5).equals("N√£o")) {
                conn.executaSql("update mensagens set aviso = 0 where codmensagem = '" + codMensagem + "'");
                ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");

            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_JtableHojeRecebidasMouseClicked

    private void JtableAntigasRecebidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableAntigasRecebidasMouseClicked
        HabilitaBotoes();
        btnResponder.setVisible(true);
        btnEncaminhar.setVisible(false);

        try {

            int linha_selecionada = JtableAntigasRecebidas.getSelectedRow();
            codMensagem = Integer.parseInt(JtableAntigasRecebidas.getValueAt(linha_selecionada, 6).toString());
            NomeRemetente = (JtableAntigasRecebidas.getValueAt(linha_selecionada, 0).toString());
            lblAssunto.setText(JtableAntigasRecebidas.getValueAt(linha_selecionada, 1).toString());
            lblDestinatario.setText(JtableAntigasRecebidas.getValueAt(linha_selecionada, 0).toString());
            lblHora.setText(JtableAntigasRecebidas.getValueAt(linha_selecionada, 3).toString());
            lblData.setText(JtableAntigasRecebidas.getValueAt(linha_selecionada, 2).toString());
            JtxtMensagem1.setText(JtableAntigasRecebidas.getValueAt(linha_selecionada, 4).toString());
            codRemetenteResponder = Integer.parseInt(JtableAntigasRecebidas.getValueAt(linha_selecionada, 7).toString());

            if (JtableAntigasRecebidas.getValueAt(linha_selecionada, 5).equals("N√£o")) {
                conn.executaSql("update mensagens set aviso = 0 where codmensagem = '" + codMensagem + "'");
                ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");

            }

        } catch (Exception e) {
        }


    }//GEN-LAST:event_JtableAntigasRecebidasMouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        desabilitabotoes();        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void JtableHojeEnviadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableHojeEnviadasMouseClicked
        HabilitaBotoes();
        btnResponder.setVisible(false);
        btnEncaminhar.setVisible(true);

        try {

            int linha_selecionada = JtableHojeEnviadas.getSelectedRow();
            codMensagem = Integer.parseInt(JtableHojeEnviadas.getValueAt(linha_selecionada, 5).toString());
            lblAssunto.setText(JtableHojeEnviadas.getValueAt(linha_selecionada, 1).toString());
            lblDestinatario.setText(JtableHojeEnviadas.getValueAt(linha_selecionada, 0).toString());
            lblHora.setText(JtableHojeEnviadas.getValueAt(linha_selecionada, 3).toString());
            lblData.setText(JtableHojeEnviadas.getValueAt(linha_selecionada, 2).toString());
            JtxtMensagem1.setText(JtableHojeEnviadas.getValueAt(linha_selecionada, 4).toString());

        } catch (Exception e) {
        }
    }//GEN-LAST:event_JtableHojeEnviadasMouseClicked

    private void JtableAntigasEnviadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableAntigasEnviadasMouseClicked
        HabilitaBotoes();
        btnResponder.setVisible(false);
        btnEncaminhar.setVisible(true);

        try {

            int linha_selecionada = JtableAntigasEnviadas.getSelectedRow();
            codMensagem = Integer.parseInt(JtableAntigasEnviadas.getValueAt(linha_selecionada, 5).toString());
            lblAssunto.setText(JtableAntigasEnviadas.getValueAt(linha_selecionada, 1).toString());
            lblDestinatario.setText(JtableAntigasEnviadas.getValueAt(linha_selecionada, 0).toString());
            lblHora.setText(JtableAntigasEnviadas.getValueAt(linha_selecionada, 3).toString());
            lblData.setText(JtableAntigasEnviadas.getValueAt(linha_selecionada, 2).toString());
            JtxtMensagem1.setText(JtableAntigasEnviadas.getValueAt(linha_selecionada, 4).toString());// TODO add your handling code here:
        } catch (Exception e) {
        }
    }//GEN-LAST:event_JtableAntigasEnviadasMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (preencherObjetoExcluir()) {
            try {
                int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir registro?", "Exclus√£o", JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);

                if (resposta == JOptionPane.YES_OPTION) {
                    objMensagem.DeletarMensagem(modMen);
                    JOptionPane.showMessageDialog(this, "Exclus√£o efetuada com sucesso!");
                    ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
                    ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
                    ContaLinhaHojeEnviadas("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
                    ContaLinhaAntigaEnviada("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
                    desabilitabotoes();
                } else {
                    JOptionPane.showMessageDialog(this, "Exclus√£o Cancelada");
                    desabilitabotoes();
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro na Exclus√£o" + ex);
            }

        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed

        if (ValidaDatas()) {
            try {

                int ano = jdcDataInicial.getCalendar().get(Calendar.YEAR);
                int mes = jdcDataInicial.getCalendar().get(Calendar.MONTH) + 1;
                int dia = jdcDataInicial.getCalendar().get(Calendar.DAY_OF_MONTH);
                String DataInicial = ano + "-" + mes + "-" + dia;

                int ano1 = jdcDataFinal.getCalendar().get(Calendar.YEAR);
                int mes1 = jdcDataFinal.getCalendar().get(Calendar.MONTH) + 1;
                int dia1 = jdcDataFinal.getCalendar().get(Calendar.DAY_OF_MONTH);
                String DataFinal = ano1 + "-" + mes1 + "-" + dia1;

                lblTituloEnviadas.setText("Mensagens Filtradas");
                lblTituloRecebidas.setText("Mensagens Filtradas");

                preencherTabelaRecebidasAntigas("select (select Nome_Func from Funcionario where men.CodDestinatario = Cod_Funcionario)as Destinatario, men.CodMensagem, func.Nome_Func, func.Cod_Funcionario as codFunn, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem,men.aviso from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodRemetente and CodDestinatario ='" + frmLogin.codFuncionario + "' and men.DataCriacao Between '" + DataInicial + "' and '" + DataFinal + "' order by men.aviso, DataCriacao, HoraCriacao  desc");

                preencherTabelaEnviadasAntiga("select (select Nome_Func from Funcionario where men.CodRemetente = Cod_Funcionario)as Remetente,func.Nome_Func, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem, men.CodMensagem from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodDestinatario and CodRemetente = '" + frmLogin.codFuncionario + "' and men.DataCriacao Between '" + DataInicial + "' and '" + DataFinal + "' order by DataCriacao, HoraCriacao desc");

                timerAtualizavel.stop();

                btnFiltrar.setVisible(false);
                btnCancelar.setVisible(true);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro: " + e);
            }
        }


    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
        ContaLinhaHojeEnviadas("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
        ContaLinhaAntigaEnviada("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
        timerAtualizavel.start();
        btnFiltrar.setVisible(true);
        btnCancelar.setVisible(false);

        jdcDataFinal.setDate(null);
        jdcDataInicial.setDate(null);
        lblTituloEnviadas.setText("Mais Antigas");
        lblTituloRecebidas.setText("Mais Antigas");
     }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnResponderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponderActionPerformed
        TipoResposta = 1;
        AssuntoResponder = lblAssunto.getText();
        MensagemResponder = JtxtMensagem1.getText();
        DataResponder = lblData.getText();
        HoraResponder = lblHora.getText();
        codMensagemResponder = codMensagem;
        NomeRemetenteResponder = NomeRemetente;
        this.setAlwaysOnTop(false);

        try {
            new frmNovoEmail().setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(frmCorreio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnResponderActionPerformed

    private void btnEncaminharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncaminharActionPerformed
        TipoResposta = 2;
        AssuntoResponder = lblAssunto.getText();
        MensagemResponder = JtxtMensagem1.getText();
        DataResponder = lblData.getText();
        HoraResponder = lblHora.getText();
        codMensagemResponder = codMensagem;
        NomeRemetenteResponder = NomeRemetente;
        this.setAlwaysOnTop(false);

        try {
            new frmNovoEmail().setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(frmCorreio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEncaminharActionPerformed

    public void escreva() {
        System.out.println(contador);

    }

    private javax.swing.Timer timer = new javax.swing.Timer(60 * 1000, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {
            escreva();
            contador--;
            if (contador == 0) {

                try {
                    dispose();
                    timer.stop();
                } catch (Exception ex) {
                    Logger.getLogger(frmInsumos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    });

    private javax.swing.Timer timerAtualizavel = new javax.swing.Timer(500, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {

            if (contadorArea == 1) {
                ContaLinhaHojeRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
                ContaLinhaAntigaRecebidas("select count(CodDestinatario) as contagem from Mensagens where CodDestinatario = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");
                ContaLinhaHojeEnviadas("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao = '" + DataAtual + "'");
                ContaLinhaAntigaEnviada("select count(CodRemetente) as contagem from Mensagens where CodRemetente = '" + frmLogin.codFuncionario + "' and DataCriacao <> '" + DataAtual + "'");

            }

            contadorArea--;

            if (contadorArea == 0) {
                contadorArea = 10;

            }

        }
    });

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCorreio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCorreio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCorreio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCorreio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmCorreio().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(frmCorreio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JtableAntigasEnviadas;
    private javax.swing.JTable JtableAntigasRecebidas;
    private javax.swing.JTable JtableHojeEnviadas;
    private javax.swing.JTable JtableHojeRecebidas;
    private javax.swing.JTextArea JtxtMensagem1;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEncaminhar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnResponder;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcDataFinal;
    private com.toedter.calendar.JDateChooser jdcDataInicial;
    private javax.swing.JLabel lblAssunto;
    private javax.swing.JLabel lblAssunto1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDestinatario;
    private javax.swing.JLabel lblDestinatario2;
    private javax.swing.JLabel lblDestinatario3;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblTituloEnviadas;
    private javax.swing.JLabel lblTituloRecebidas;
    // End of variables declaration//GEN-END:variables
int contadorArea = 3;
    int codMensagem;
    public static int TipoResposta;
    int contador = 10;
    public static String AssuntoResponder;
    public static String MensagemResponder;
    public int codDestinatarioResponder;
    public static String DataResponder;
    public static String HoraResponder;
    public static int codMensagemResponder;
    public static int codRemetenteResponder;
    String NomeRemetente;
    public static String NomeRemetenteResponder;

    public void preencherTabelaRecebidasHoje(String Sql) throws SQLException {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Remetente</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Mensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Lida?</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>codMensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>codRemetente</span></html>"};

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {
                if (conn.rs.getInt("Aviso") == 1) {
                    dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), "N√£o", conn.rs.getInt("CodMensagem"), conn.rs.getInt("codFunn")});
                } else {
                    dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), "Sim", conn.rs.getInt("CodMensagem"), conn.rs.getInt("codFunn")});

                }
            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "N√£o foram encontrados mensagens nesse per√≠odo" + e);

        }

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas);
        JtableHojeRecebidas.setModel(modelo);
        JtableHojeRecebidas.getColumnModel().getColumn(0).setPreferredWidth(115);
        JtableHojeRecebidas.getColumnModel().getColumn(0).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableHojeRecebidas.getColumnModel().getColumn(1).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableHojeRecebidas.getColumnModel().getColumn(2).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableHojeRecebidas.getColumnModel().getColumn(3).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(4).setMaxWidth(0);
        JtableHojeRecebidas.getColumnModel().getColumn(4).setMinWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
        JtableHojeRecebidas.getColumnModel().getColumn(5).setPreferredWidth(65);
        JtableHojeRecebidas.getColumnModel().getColumn(5).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(6).setMaxWidth(0);
        JtableHojeRecebidas.getColumnModel().getColumn(6).setMinWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(6).setMaxWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(6).setMinWidth(0);
        JtableHojeRecebidas.getColumnModel().getColumn(7).setMaxWidth(0);
        JtableHojeRecebidas.getColumnModel().getColumn(7).setMinWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(7).setMaxWidth(0);
        JtableHojeRecebidas.getTableHeader().getColumnModel().getColumn(7).setMinWidth(0);
        JtableHojeRecebidas.getTableHeader().setReorderingAllowed(false);
        JtableHojeRecebidas.setAutoResizeMode(JtableHojeRecebidas.AUTO_RESIZE_OFF);
        JtableHojeRecebidas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void preencherTabelaRecebidasAntigas(String Sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Remetente</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Mensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Lida?</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>codMensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>codRemetente</span></html>"};

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                if (conn.rs.getInt("Aviso") == 1) {
                    dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), "N√£o", conn.rs.getInt("CodMensagem"), conn.rs.getInt("codFunn")});
                } else {
                    dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), "Sim", conn.rs.getInt("CodMensagem"), conn.rs.getInt("codFunn")});

                }
            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "N√£o foram encontrados mensagens nesse per√≠odo" + e);

        }

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas);
        JtableAntigasRecebidas.setModel(modelo);
        JtableAntigasRecebidas.getColumnModel().getColumn(0).setPreferredWidth(115);
        JtableAntigasRecebidas.getColumnModel().getColumn(0).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableAntigasRecebidas.getColumnModel().getColumn(1).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableAntigasRecebidas.getColumnModel().getColumn(2).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableAntigasRecebidas.getColumnModel().getColumn(3).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(4).setMaxWidth(0);
        JtableAntigasRecebidas.getColumnModel().getColumn(4).setMinWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
        JtableAntigasRecebidas.getColumnModel().getColumn(5).setPreferredWidth(65);
        JtableAntigasRecebidas.getColumnModel().getColumn(5).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(6).setMaxWidth(0);
        JtableAntigasRecebidas.getColumnModel().getColumn(6).setMinWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(6).setMaxWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(6).setMinWidth(0);
        JtableAntigasRecebidas.getColumnModel().getColumn(7).setMaxWidth(0);
        JtableAntigasRecebidas.getColumnModel().getColumn(7).setMinWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(7).setMaxWidth(0);
        JtableAntigasRecebidas.getTableHeader().getColumnModel().getColumn(7).setMinWidth(0);
        JtableAntigasRecebidas.getTableHeader().setReorderingAllowed(false);
        JtableAntigasRecebidas.setAutoResizeMode(JtableAntigasRecebidas.AUTO_RESIZE_OFF);
        JtableAntigasRecebidas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void preencherTabelaEnviadasHoje(String Sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Destinat√°rio</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Mensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Cod</span></html>"};

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), conn.rs.getInt("codMensagem")});

            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "N√£o foram encontrados mensagens nesse per√≠odo" + e);

        }

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas);
        JtableHojeEnviadas.setModel(modelo);
        JtableHojeEnviadas.getColumnModel().getColumn(0).setPreferredWidth(142);
        JtableHojeEnviadas.getColumnModel().getColumn(0).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(1).setPreferredWidth(122);
        JtableHojeEnviadas.getColumnModel().getColumn(1).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableHojeEnviadas.getColumnModel().getColumn(2).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableHojeEnviadas.getColumnModel().getColumn(3).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(4).setMaxWidth(0);
        JtableHojeEnviadas.getColumnModel().getColumn(4).setMinWidth(0);
        JtableHojeEnviadas.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        JtableHojeEnviadas.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
        JtableHojeEnviadas.getColumnModel().getColumn(5).setMaxWidth(0);
        JtableHojeEnviadas.getColumnModel().getColumn(5).setMinWidth(0);
        JtableHojeEnviadas.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(0);
        JtableHojeEnviadas.getTableHeader().getColumnModel().getColumn(5).setMinWidth(0);
        JtableHojeEnviadas.getTableHeader().setReorderingAllowed(false);
        JtableHojeEnviadas.setAutoResizeMode(JtableHojeEnviadas.AUTO_RESIZE_OFF);
        JtableHojeEnviadas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void preencherTabelaEnviadasAntiga(String Sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Destinat√°rio</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Mensagem</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Codigo</span></html>"};

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                dados.add(new Object[]{conn.rs.getString("Nome_Func"), conn.rs.getString("Assunto"), dt.format(conn.rs.getDate("DataCriacao")), conn.rs.getString("HoraCriacao").substring(0, 5), conn.rs.getString("Mensagem"), conn.rs.getInt("codMensagem")});

            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "N√£o foram encontrados mensagens nesse per√≠odo" + e);

        }

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas);
        JtableAntigasEnviadas.setModel(modelo);
        JtableAntigasEnviadas.getColumnModel().getColumn(0).setPreferredWidth(142);
        JtableAntigasEnviadas.getColumnModel().getColumn(0).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(1).setPreferredWidth(122);
        JtableAntigasEnviadas.getColumnModel().getColumn(1).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableAntigasEnviadas.getColumnModel().getColumn(2).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableAntigasEnviadas.getColumnModel().getColumn(3).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(4).setMaxWidth(0);
        JtableAntigasEnviadas.getColumnModel().getColumn(4).setMinWidth(0);
        JtableAntigasEnviadas.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        JtableAntigasEnviadas.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
        JtableAntigasEnviadas.getColumnModel().getColumn(5).setMaxWidth(0);
        JtableAntigasEnviadas.getColumnModel().getColumn(5).setMinWidth(0);
        JtableAntigasEnviadas.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(0);
        JtableAntigasEnviadas.getTableHeader().getColumnModel().getColumn(5).setMinWidth(0);

        JtableAntigasEnviadas.getTableHeader().setReorderingAllowed(false);
        JtableAntigasEnviadas.setAutoResizeMode(JtableAntigasEnviadas.AUTO_RESIZE_OFF);
        JtableAntigasEnviadas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void AnularTabelaHojeRecebidas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Remetente</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Lida?</span></html>"};

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas);
        JtableHojeRecebidas.setModel(modelo);
        JtableHojeRecebidas.getColumnModel().getColumn(0).setPreferredWidth(106);
        JtableHojeRecebidas.getColumnModel().getColumn(0).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableHojeRecebidas.getColumnModel().getColumn(1).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableHojeRecebidas.getColumnModel().getColumn(2).setResizable(false);
        JtableHojeRecebidas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableHojeRecebidas.getColumnModel().getColumn(3).setResizable(false);
        JtableHojeRecebidas.getTableHeader().setReorderingAllowed(false);
        JtableHojeRecebidas.setAutoResizeMode(JtableHojeRecebidas.AUTO_RESIZE_OFF);
        JtableHojeRecebidas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void AnularTabelaAntigasRecebidas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{
            "<html><span style='color:#ef6f53;font-weight: bold;'>Remetente</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Lida?</span></html>"};

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas); //Instacia a classe do modelo da Tabela.
        JtableAntigasRecebidas.setModel(modelo);
        JtableAntigasRecebidas.getColumnModel().getColumn(0).setPreferredWidth(106); // Tamanho em pixel da coluna
        JtableAntigasRecebidas.getColumnModel().getColumn(0).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableAntigasRecebidas.getColumnModel().getColumn(1).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableAntigasRecebidas.getColumnModel().getColumn(2).setResizable(false);
        JtableAntigasRecebidas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableAntigasRecebidas.getColumnModel().getColumn(3).setResizable(false);
        JtableAntigasRecebidas.getTableHeader().setReorderingAllowed(false);
        JtableAntigasRecebidas.setAutoResizeMode(JtableAntigasRecebidas.AUTO_RESIZE_OFF);//N√£o pode ser redimensionada
        JtableAntigasRecebidas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void AnularTabelaHojeEnviadas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"<html><span style='color:#ef6f53;font-weight: bold;'>Destinat√°rio</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>"};

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas); //Instacia a classe do modelo da Tabela.
        JtableHojeEnviadas.setModel(modelo);
        JtableHojeEnviadas.getColumnModel().getColumn(0).setPreferredWidth(182); // Tamanho em pixel da coluna
        JtableHojeEnviadas.getColumnModel().getColumn(0).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableHojeEnviadas.getColumnModel().getColumn(1).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableHojeEnviadas.getColumnModel().getColumn(2).setResizable(false);
        JtableHojeEnviadas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableHojeEnviadas.getColumnModel().getColumn(3).setResizable(false);
        JtableHojeEnviadas.getTableHeader().setReorderingAllowed(false);
        JtableHojeEnviadas.setAutoResizeMode(JtableHojeEnviadas.AUTO_RESIZE_OFF);//N√£o pode ser redimensionada
        JtableHojeEnviadas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void AnularTabelaAntigasEnviadas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"<html><span style='color:#ef6f53;font-weight: bold;'>Destinat√°rio</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Assunto</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Hora</span></html>"};

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas); //Instacia a classe do modelo da Tabela.
        JtableAntigasEnviadas.setModel(modelo);
        JtableAntigasEnviadas.getColumnModel().getColumn(0).setPreferredWidth(182); // Tamanho em pixel da coluna
        JtableAntigasEnviadas.getColumnModel().getColumn(0).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(1).setPreferredWidth(82);
        JtableAntigasEnviadas.getColumnModel().getColumn(1).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(2).setPreferredWidth(80);
        JtableAntigasEnviadas.getColumnModel().getColumn(2).setResizable(false);
        JtableAntigasEnviadas.getColumnModel().getColumn(3).setPreferredWidth(50);
        JtableAntigasEnviadas.getColumnModel().getColumn(3).setResizable(false);
        JtableAntigasEnviadas.getTableHeader().setReorderingAllowed(false);
        JtableAntigasEnviadas.setAutoResizeMode(JtableAntigasEnviadas.AUTO_RESIZE_OFF);//N√£o pode ser redimensionada
        JtableAntigasEnviadas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public boolean ContaLinhaHojeEnviadas(String Sql) {

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                if (conn.rs.getInt("contagem") >= 1) {

                    preencherTabelaEnviadasHoje("select (select Nome_Func from Funcionario where men.CodRemetente = Cod_Funcionario)as Remetente,func.Nome_Func, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem, men.CodMensagem from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodDestinatario and CodRemetente ='" + frmLogin.codFuncionario + "' and men.DataCriacao ='" + DataAtual + "'order by DataCriacao, HoraCriacao desc");

                    return true;
                } else {
                    AnularTabelaHojeEnviadas();
                    return false;
                }

            } while (conn.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "N√£o foram lan√ßados nenhum registro");

        }

        return true;
    }

    public boolean ContaLinhaAntigaEnviada(String Sql) {

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                if (conn.rs.getInt("contagem") >= 1) {

                    preencherTabelaEnviadasAntiga("select (select Nome_Func from Funcionario where men.CodRemetente = Cod_Funcionario)as Remetente,func.Nome_Func, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem, men.CodMensagem from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodDestinatario and CodRemetente = '" + frmLogin.codFuncionario + "' and men.DataCriacao <>'" + DataAtual + "'order by DataCriacao, HoraCriacao desc");
                    return true;
                } else {
                    AnularTabelaAntigasEnviadas();
                    return false;
                }

            } while (conn.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "N√£o foram lan√ßados nenhum registro");

        }

        return true;
    }

    public boolean ContaLinhaHojeRecebidas(String Sql) {

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                if (conn.rs.getInt("contagem") >= 1) {

                    preencherTabelaRecebidasHoje("select (select Nome_Func from Funcionario where men.CodDestinatario = Cod_Funcionario)as Destinatario,men.CodMensagem,func.Nome_Func, func.Cod_Funcionario as codFunn, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem, men.aviso from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodRemetente and CodDestinatario ='" + frmLogin.codFuncionario + "' and men.DataCriacao = '" + DataAtual + "'order by men.aviso,DataCriacao, HoraCriacao desc");

                    return true;
                } else {
                    AnularTabelaHojeRecebidas();
                    return false;
                }

            } while (conn.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "N√£o foram lan√ßados nenhum registro");

        }

        return true;
    }

    public boolean ContaLinhaAntigaRecebidas(String Sql) {

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                if (conn.rs.getInt("contagem") >= 1) {

                    preencherTabelaRecebidasAntigas("select (select Nome_Func from Funcionario where men.CodDestinatario = Cod_Funcionario)as Destinatario, men.CodMensagem, func.Nome_Func, func.Cod_Funcionario as codFunn, men.Assunto, men.DataCriacao, men.HoraCriacao, men.Mensagem,men.aviso from Mensagens as men inner join Funcionario as func on func.Cod_Funcionario = men.CodRemetente and CodDestinatario ='" + frmLogin.codFuncionario + "' and men.DataCriacao <> '" + DataAtual + "'order by men.aviso, DataCriacao, HoraCriacao  desc");

                    return true;
                } else {
                    AnularTabelaAntigasRecebidas();
                    return false;
                }

            } while (conn.rs.next());

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "N√£o foram lan√ßados nenhum registro");

        }

        return true;
    }

    private String DataAtual() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        return dateFormat.format(date);
    }

    public void desabilitabotoes() {
        btnExcluir.setEnabled(false);
        btnResponder.setEnabled(false);
        btnEncaminhar.setEnabled(false);

    }

    public void HabilitaBotoes() {
        btnExcluir.setEnabled(true);
        btnResponder.setEnabled(true);
        btnEncaminhar.setEnabled(true);

    }

    public boolean preencherObjetoExcluir() {
        modMen.setCodMensagem(codMensagem);

        return true;
    }

    public boolean ValidaDatas() {

        if (jdcDataInicial.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Informe a data Inicial");

            return false;
        }
        if (jdcDataFinal.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Informe a data Final");

            return false;
        }

        return true;

    }
}
