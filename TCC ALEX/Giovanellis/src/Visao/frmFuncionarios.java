/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Modelo.ModeloTabelas;

import giovanellis.ConectaBanco;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import Controlador.ControladorLancamentoFuncionario;
import Modelo.ModeloFuncionario;
import java.awt.Color;

import Modelo.teclasPermitidas;
import Modelo.DatasPermitidas;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import Modelo.TextDocument;
import Modelo.LimitadorMoeda;

/**
 *
 * @author Alex
 */
public class frmFuncionarios extends javax.swing.JFrame {

    LimitadorMoeda Moeda;
    TextDocument Permitircasas;
    teclasPermitidas ValidaTeclas;
    DatasPermitidas ValidaDatas;
    ConectaBanco conn;
    
    ControladorLancamentoFuncionario ControladorFun;
    ModeloFuncionario ModFun;
    frmCalculadora calculadora;
    int codDespesa;
    int aviso;
    NumberFormat z;
    SimpleDateFormat fmt;
    SimpleDateFormat fmdb;
    DecimalFormat df;

    /**
     * Creates new form frmFuncionarios
     */
    public frmFuncionarios() throws Exception {
        calculadora = new frmCalculadora();
        Moeda = new LimitadorMoeda();
        Permitircasas = new TextDocument();
        ValidaTeclas = new teclasPermitidas();
        ValidaDatas = new DatasPermitidas();
        conn = new ConectaBanco();
       
        ControladorFun = new ControladorLancamentoFuncionario();
        ModFun = new ModeloFuncionario();
        z = NumberFormat.getCurrencyInstance();
        fmt = new SimpleDateFormat("dd/MM/yyyy");
        fmdb = new SimpleDateFormat("yyyy-MM-dd");
        df = new DecimalFormat("#,##0.00");

//        btnAlterar.setVisible(false);
        Color Fundo = new Color(238, 235, 227);
        getContentPane().setBackground(Fundo);
        setAlwaysOnTop(true);
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagens/Icone.png")).getImage());

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        JdcInicio = new com.toedter.calendar.JDateChooser();
        JdcFim = new com.toedter.calendar.JDateChooser();
        lblTotal = new javax.swing.JLabel();
        JcbFuncionari = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtableFuncionarios = new javax.swing.JTable();
        jcbFuncionarioPagamento = new javax.swing.JComboBox();
        jdcSalario = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnIncluirSalario = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTipodePagamento = new javax.swing.JTextField();
        txtCod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        btnCalculadora = new javax.swing.JButton();
        lblNomeUsuario = new javax.swing.JLabel();
        btnAlterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Funcionários");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(239, 111, 83));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltar.setOpaque(false);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 620, 100, 40));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(239, 111, 83));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        jButton1.setText("Calcular");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 100, 40));

        JdcInicio.setOpaque(false);
        JdcInicio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JdcInicioPropertyChange(evt);
            }
        });
        getContentPane().add(JdcInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 140, -1));

        JdcFim.setOpaque(false);
        JdcFim.setVerifyInputWhenFocusTarget(false);
        JdcFim.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JdcFimPropertyChange(evt);
            }
        });
        getContentPane().add(JdcFim, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 140, -1));

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(88, 55, 66));
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotal.setText("Total");
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 640, 30));

        JcbFuncionari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcbFuncionariActionPerformed(evt);
            }
        });
        getContentPane().add(JcbFuncionari, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 320, -1));

        JtableFuncionarios.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JtableFuncionarios.setForeground(new java.awt.Color(88, 55, 66));
        JtableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtableFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JtableFuncionarios);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 620, 120));

        jcbFuncionarioPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFuncionarioPagamentoActionPerformed(evt);
            }
        });
        getContentPane().add(jcbFuncionarioPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 260, -1));

        jdcSalario.setOpaque(false);
        jdcSalario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcSalarioPropertyChange(evt);
            }
        });
        getContentPane().add(jdcSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 140, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(88, 55, 66));
        jLabel2.setText("Código Funcionário:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 84, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(88, 55, 66));
        jLabel3.setText("Valor:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 243, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(88, 55, 66));
        jLabel4.setText("Funcionário:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 123, -1, -1));

        btnIncluirSalario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIncluirSalario.setForeground(new java.awt.Color(239, 111, 83));
        btnIncluirSalario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnIncluirSalario.setText("Incluir");
        btnIncluirSalario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIncluirSalario.setOpaque(false);
        btnIncluirSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirSalarioActionPerformed(evt);
            }
        });
        getContentPane().add(btnIncluirSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 191, 100, 40));

        jLabel5.setBackground(new java.awt.Color(88, 55, 66));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(239, 111, 83));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Lançamento de Salário");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 660, 50));

        jLabel6.setBackground(new java.awt.Color(88, 55, 66));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(239, 111, 83));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Consulta de Lançamentos");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 280, 660, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(88, 55, 66));
        jLabel7.setText("Descrição:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 203, -1, -1));
        getContentPane().add(txtTipodePagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 170, -1));
        getContentPane().add(txtCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 50, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(88, 55, 66));
        jLabel1.setText("Data Final");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 356, 60, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(88, 55, 66));
        jLabel8.setText("Data Inicial");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 356, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(88, 55, 66));
        jLabel9.setText("Data de lançamento:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 163, -1, -1));
        getContentPane().add(txtSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 120, -1));

        btnCalculadora.setBackground(new java.awt.Color(88, 55, 66));
        btnCalculadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/CalculadoraIcone cópia.png"))); // NOI18N
        btnCalculadora.setOpaque(false);
        btnCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculadoraActionPerformed(evt);
            }
        });
        getContentPane().add(btnCalculadora, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 50, 60));

        lblNomeUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNomeUsuario.setForeground(new java.awt.Color(88, 55, 66));
        lblNomeUsuario.setText(" ");
        getContentPane().add(lblNomeUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 270, 20));

        btnAlterar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAlterar.setForeground(new java.awt.Color(239, 111, 83));
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/button.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAlterar.setOpaque(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 100, 40));

        setSize(new java.awt.Dimension(648, 713));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        timer.stop();
        frmHome.binario = 0;
        dispose();
        calculadora.dispose();
        conn.desconecta();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        frmHome.contador = 20;
        contador = 10;
    }//GEN-LAST:event_formMouseMoved

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        txtSalario.setDocument(new LimitadorMoeda());
        txtCod.setEnabled(false);
        DesabilitaCampos();
//      jdcSalario.setDocument(new DatasPermitidas());
        Color Roxo = new Color(88, 55, 66);
        Color Laranja = new Color(242, 184, 171);
        JtableFuncionarios.setSelectionBackground(Roxo);
        JtableFuncionarios.setSelectionForeground(Laranja);
        timer.start();
        PreencherComboboxConsultar();
        PreencherComboboxPagamento();
        jdcSalario.setDate(new Date());

    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        funcionarioConsulta = (String) JcbFuncionari.getSelectedItem().toString().substring(53).replace("</span></html>", "");
        data1 = JdcInicio.getDate();
        data2 = JdcFim.getDate();

        if (JcbFuncionari.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Escolha um Funcionário ou Todos.");
        } else if (ValidaDatas()) {
            if (JcbFuncionari.getSelectedIndex() == 1) {
                preencherTabela("select f.cod_funcionario, f.Nome_func, p.tipoPagamento,p.cod_pagamento, p.dataExpedido, P.valorPagamento from "
                        + "funcionario as F inner join pagamento as P on f.cod_funcionario = p.cod_funcionario and p.dataExpedido between '" + datainicio + "' and '" + datafim + "' ");
            } else {
                preencherTabela("select f.cod_funcionario, f.Nome_func, p.tipoPagamento,p.cod_pagamento, p.dataExpedido, P.valorPagamento from "
                        + "funcionario as F inner join pagamento as P on f.cod_funcionario = p.cod_funcionario and p.dataExpedido between '" + datainicio + "' and '" + datafim + "' and f.Nome_func = '" + funcionarioConsulta + "' ");

            }

            try {
                double x = 0.0;
                for (int y = 0; y < JtableFuncionarios.getRowCount(); y++) {
                    x += Double.parseDouble(JtableFuncionarios.getModel().getValueAt(y, 4).toString().replace("R$", "").replace(".", "").replace(",", "."));
                }
                lblTotal.setText(z.format(x));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro: " + e);

            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcbFuncionarioPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFuncionarioPagamentoActionPerformed
        funcionariolancamento = (String) jcbFuncionarioPagamento.getSelectedItem().toString().substring(53).replace("</span></html>", "");

        if (jcbFuncionarioPagamento.getSelectedIndex() == 0) {

            DesabilitaCampos();
        } else {
            HabilitarCampos();

            try {
                conn.executaSql("select * from funcionario where nome_func = '" + funcionariolancamento + "'");
                conn.rs.first();
                txtCod.setText(conn.rs.getString("cod_funcionario"));

            } catch (Exception ex) {
                Logger.getLogger(frmFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jcbFuncionarioPagamentoActionPerformed

    private void JcbFuncionariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcbFuncionariActionPerformed


    }//GEN-LAST:event_JcbFuncionariActionPerformed

    private void JdcInicioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JdcInicioPropertyChange
        try {
            data1 = JdcInicio.getDate();
            datainicio = fmt.format(datas(JdcInicio.getDate()));

        } catch (Exception e) {
        }
    }//GEN-LAST:event_JdcInicioPropertyChange

    private void JdcFimPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JdcFimPropertyChange
        try {
            data2 = JdcFim.getDate();
            datafim = fmt.format(data(JdcFim.getDate()));

        } catch (Exception e) {
        }
    }//GEN-LAST:event_JdcFimPropertyChange

    private void btnIncluirSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirSalarioActionPerformed

        if (txtSalario.getText().length() > 8) {

            JOptionPane.showMessageDialog(this, "Salário Superior ao Permitido");

        } else {
            if (ValidaCampos()) {

                if (jcbFuncionarioPagamento.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(this, "Escolha um funcionário");

                }
                if (preencheObjeto()) {
                    try {
                        ControladorFun.LancarPagamento(ModFun);
                        JOptionPane.showMessageDialog(this, "Dados Inseridos com sucesso");

                        PreencherComboboxConsultar();

                        preencherTabela("select f.cod_funcionario, f.Nome_func, p.tipoPagamento,p.cod_pagamento, p.dataExpedido, P.valorPagamento from "
                                + "funcionario as F inner join pagamento as P on f.cod_funcionario = p.cod_funcionario and f.Nome_func = '" + funcionariolancamento + "' ");

                        limpacampos();
                        DesabilitaCampos();

                    } catch (Exception ex) {
                        Logger.getLogger(frmDespesas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jcbFuncionarioPagamento.setVisible(true);
                lblNomeUsuario.setVisible(false);
                btnIncluirSalario.setEnabled(false);
            }

        }


    }//GEN-LAST:event_btnIncluirSalarioActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        timer.stop();
        frmHome.contador = 10;
        frmHome.binario = 0;
        calculadora.dispose();
        conn.desconecta();
    }//GEN-LAST:event_formWindowClosing

    private void jdcSalarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcSalarioPropertyChange
        try {
            dataSalario = jdcSalario.getDate();
            DataBanco = fmdb.format(datas(jdcSalario.getDate()));

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jdcSalarioPropertyChange

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed


    }//GEN-LAST:event_formWindowClosed

    private void btnCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculadoraActionPerformed

        calculadora.setVisible(true);
        calculadora.setAlwaysOnTop(true);

    }//GEN-LAST:event_btnCalculadoraActionPerformed

    private void JtableFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableFuncionariosMouseClicked
        if (frmHome.CodPermFun == 1) {

            try {
                HabilitarCampos();

                jcbFuncionarioPagamento.setVisible(false);
                lblNomeUsuario.setVisible(true);
                int linha_selecionada = JtableFuncionarios.getSelectedRow();
                txtSalario.setText(JtableFuncionarios.getValueAt(linha_selecionada, 4).toString());
                codDespesa = Integer.parseInt(JtableFuncionarios.getValueAt(linha_selecionada, 5).toString());
                txtTipodePagamento.setText(JtableFuncionarios.getValueAt(linha_selecionada, 2).toString());
                txtCod.setText(JtableFuncionarios.getValueAt(linha_selecionada, 0).toString());
                lblNomeUsuario.setText(JtableFuncionarios.getValueAt(linha_selecionada, 1).toString());
                funcionariolancamento = (JtableFuncionarios.getValueAt(linha_selecionada, 1).toString());
                btnIncluirSalario.setVisible(false);
                btnAlterar.setVisible(true);
                try {
                    jdcSalario.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(JtableFuncionarios.getValueAt(linha_selecionada, 3).toString()));
                } catch (Exception ex) {
                    Logger.getLogger(frmAnotacoes.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_JtableFuncionariosMouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed

        if (txtSalario.getText().length() > 8) {

            JOptionPane.showMessageDialog(this, "Salário Superior ao Permitido");

        } else {
            if (ValidaCampos()) {

                if (PreencheAtualizaObjeto()) {
                    try {
                        ControladorFun.AlterarPagamento(ModFun);
                        JOptionPane.showMessageDialog(this, "Dados Alterados com sucesso");
                        btnAlterar.setVisible(false);
                        btnIncluirSalario.setVisible(true);
                        jcbFuncionarioPagamento.setVisible(true);
                        lblNomeUsuario.setVisible(false);
                        PreencherComboboxConsultar();

                        preencherTabela("select f.cod_funcionario, f.Nome_func, p.tipoPagamento,p.cod_pagamento, p.dataExpedido, P.valorPagamento from "
                                + "funcionario as F inner join pagamento as P on f.cod_funcionario = p.cod_funcionario and f.Nome_func = '" + funcionariolancamento + "' ");

                        limpacampos();
                        DesabilitaCampos();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Erro ao alterar lançamento");
                    }
                }
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAlterarActionPerformed
    int contador = 10;

    public void escreva() {
        System.out.println(contador);

    }

    private javax.swing.Timer timer = new javax.swing.Timer(60 * 1000, new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent e) {
            escreva();
            contador--;
            if (contador == 0) {

                try {
                    dispose();
                    timer.stop();
                } catch (Exception ex) {
                    Logger.getLogger(frmInsumos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    });

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmFuncionarios().setVisible(true);

                    try {

                    } catch (Exception e) {
                    }
                } catch (Exception ex) {
                    Logger.getLogger(frmFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox JcbFuncionari;
    private com.toedter.calendar.JDateChooser JdcFim;
    private com.toedter.calendar.JDateChooser JdcInicio;
    private javax.swing.JTable JtableFuncionarios;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCalculadora;
    private javax.swing.JButton btnIncluirSalario;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox jcbFuncionarioPagamento;
    private com.toedter.calendar.JDateChooser jdcSalario;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtSalario;
    private javax.swing.JTextField txtTipodePagamento;
    // End of variables declaration//GEN-END:variables

    Date data1, data2, dataSalario;

    String funcionario, funcionarioConsulta, funcionariolancamento, DataBanco;
    int cod = 0;

    public boolean ValidaCampos() {
        if (txtTipodePagamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Descrição");
            return false;
        }
        if (txtSalario.getText().equals("") || txtSalario.getText().equals("0,00")) {
            JOptionPane.showMessageDialog(this, "Informe o Valor");
            return false;
        }
        if (jdcSalario.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Data de Lançamento");
            return false;
        }

        return true;
    }

    public void DesabilitaCampos() {
        jdcSalario.setEnabled(false);
        txtSalario.setEnabled(false);
        txtTipodePagamento.setEnabled(false);
        btnIncluirSalario.setEnabled(false);
    }

    public void HabilitarCampos() {
        jdcSalario.setEnabled(true);
        txtSalario.setEnabled(true);
        txtTipodePagamento.setEnabled(true);
        btnIncluirSalario.setEnabled(true);
    }

    public void PreencherComboboxPagamento() {

        conn.executaSql("select Nome_Func from Funcionario order by Nome_Func");

        try {

            conn.rs.first();
            jcbFuncionarioPagamento.addItem("<html><span style='color:#583742;font-weight: bold;'>Selecione o Funcionário...</span></html>");

            do {

                jcbFuncionarioPagamento.addItem("<html><span style='color:#583742;font-weight: bold;'>" + (conn.rs.getString("Nome_Func") + "</span></html>"));

            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ComboBox");
        }

    }

    public void PreencherComboboxConsultar() {
        
        conn.executaSql("select distinct Nome_Func from Funcionario as fun inner join Pagamento as p on p.Cod_Funcionario = fun.Cod_Funcionario order by Nome_Func");

        try {
            JcbFuncionari.removeAllItems();
            conn.rs.first();
            JcbFuncionari.addItem("<html><span style='color:#583742;font-weight: bold;'>Selecione o Funcionário...</span></html>");
            JcbFuncionari.addItem("<html><span style='color:#583742;font-weight: bold;'>Todos</span></html>");

            do {

                JcbFuncionari.addItem("<html><span style='color:#583742;font-weight: bold;'>" + (conn.rs.getString("Nome_Func") + "</span></html>"));

            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ComboBox" + e);
        }

    }

    public void preencherTabela(String Sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"<html><span style='color:#ef6f53;font-weight: bold;'>Código</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Nome</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Tipo Pagamento</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Data Pagamento</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>Valor</span></html>",
            "<html><span style='color:#ef6f53;font-weight: bold;'>cod</span></html>"};

        conn.executaSql(Sql);
        try {
            conn.rs.first();
            do {

                dados.add(new Object[]{conn.rs.getInt("cod_funcionario"), conn.rs.getString("Nome_func"),
                    conn.rs.getString("tipoPagamento"), fmt.format(conn.rs.getDate("dataExpedido")), z.format(conn.rs.getDouble("valorPagamento")), conn.rs.getInt("cod_pagamento")});

            } while (conn.rs.next());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Não há lançamentos na data informada");

        }

        ModeloTabelas modelo = new ModeloTabelas(dados, Colunas); //Instacia a classe do modelo da Tabela.
        JtableFuncionarios.setModel(modelo);
        JtableFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(63); // Tamanho em pixel da coluna
        JtableFuncionarios.getColumnModel().getColumn(0).setResizable(false);
        JtableFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(190);
        JtableFuncionarios.getColumnModel().getColumn(1).setResizable(false);
        JtableFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(150);
        JtableFuncionarios.getColumnModel().getColumn(2).setResizable(false);
        JtableFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(110);
        JtableFuncionarios.getColumnModel().getColumn(3).setResizable(false);
        JtableFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(100);
        JtableFuncionarios.getColumnModel().getColumn(4).setResizable(false);
        JtableFuncionarios.getColumnModel().getColumn(5).setMaxWidth(0);
        JtableFuncionarios.getColumnModel().getColumn(5).setMinWidth(0);
        JtableFuncionarios.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(0);
        JtableFuncionarios.getTableHeader().getColumnModel().getColumn(5).setMinWidth(0);
        JtableFuncionarios.getTableHeader().setReorderingAllowed(false);
        JtableFuncionarios.setAutoResizeMode(JtableFuncionarios.AUTO_RESIZE_OFF);//Não pode ser redimensionada
        JtableFuncionarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public boolean ValidaDatas() {
        try {

            if ((data1.getDate() - data2.getDate()) > 0) {
                JOptionPane.showMessageDialog(this, "Data inicial maior que a data final, ou data final menor que a inicial");
                return false;
            }

        } catch (Exception e) {
        }

        if (JdcInicio.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Informe a data Inicial");

            return false;
        }
        if (JdcFim.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Informe a data Final");

            return false;
        }

        return true;

    }

    String datainicio, datafim, data;

    public Date datas(Date i) {
        // Método com retorno. Retorna data
        datainicio = fmt.format(i);
        DateFormat df = DateFormat.getDateInstance(DateFormat.LONG, new Locale("pt", "BR"));

        return i;

    }

    public Date data(Date f) {
        // Método com retorno. Retorna data
        datafim = fmt.format(f);
        DateFormat df = DateFormat.getDateInstance(DateFormat.LONG, new Locale("pt", "BR"));

        return f;

    }

    public boolean preencheObjeto() {

        ModFun.setCodFuncionario(Integer.parseInt(txtCod.getText()));
        ModFun.setValorPagamento(Double.parseDouble(txtSalario.getText().replace(".", "").replace(",", ".")));
        ModFun.setDataExpedido(DataBanco);
        ModFun.setTipodeDespesa(txtTipodePagamento.getText());

        return true;
    }

    public boolean PreencheAtualizaObjeto() {

        ModFun.setCodFuncionario(Integer.parseInt(txtCod.getText()));
        ModFun.setValorPagamento(Double.parseDouble(txtSalario.getText().replace(".", "").replace(",", ".")));
        ModFun.setDataExpedido(DataBanco);
        ModFun.setTipodeDespesa(txtTipodePagamento.getText());
        ModFun.setCodDespesa(codDespesa);

        return true;
    }

    public void limpacampos() {
        txtCod.setText("");
        txtSalario.setText("");
        txtTipodePagamento.setText("");
        jdcSalario.setDate(null);
        jcbFuncionarioPagamento.setSelectedIndex(0);

    }

}
