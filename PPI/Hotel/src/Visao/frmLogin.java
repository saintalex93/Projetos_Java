/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controlador.ControladorLogin;
import Modelo.clsLogin;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import Controlador.Mysql;
import java.awt.Font;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.FontUIResource;

/**
 *
 * @author Alex
 */
public class frmLogin extends javax.swing.JFrame {

    /**
     * @return the PermissaoFunci
     */
    public static String getPermissaoFunci() {
        return PermissaoFunci;
    }

    /**
     * @param aPermissaoFunci the PermissaoFunci to set
     */
    public static void setPermissaoFunci(String aPermissaoFunci) {
        PermissaoFunci = aPermissaoFunci;
    }

    private clsLogin usuario;

    boolean result;
    Controlador.ControladorLogin DAO;
    Mysql conn;

    /**
     * Creates new form frmLogin
     */
    public frmLogin() throws Exception {

        Color Roxo = new Color(88, 55, 66);
       
       
        conn = new Mysql();
       this.setIconImage(new ImageIcon(getClass().getResource("/Imagens/Icone.png")).getImage());
        initComponents();
        setAlwaysOnTop(true);
        try {
            DAO = new ControladorLogin();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
           try {
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(frm_home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(frm_home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(frm_home.class.getName()).log(Level.SEVERE, null, ex);
        }

        SwingUtilities.updateComponentTreeUI(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mtxt_senha = new javax.swing.JPasswordField();
        btn_entrar = new javax.swing.JButton();
        btn_entrar1 = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Root's Hotel");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/RootsLogin.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 250, 260));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jPanel1.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setText("Usuario");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setText("Senha");

        mtxt_senha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btn_entrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_entrar.setText("Entrar");
        btn_entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entrarActionPerformed(evt);
            }
        });

        btn_entrar1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_entrar1.setText("Cancelar");
        btn_entrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entrar1ActionPerformed(evt);
            }
        });

        txtUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_entrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(btn_entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mtxt_senha)
                            .addComponent(txtUsuario))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mtxt_senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_entrar)
                    .addComponent(btn_entrar1))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 250, 130));

        setSize(new java.awt.Dimension(616, 297));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_entrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entrarActionPerformed
        
        NomeUsuario = txtUsuario.getText();

        if (validarCampos()) {
            if (usuarioExiste()) {

                JOptionPane.showMessageDialog(this, "Usuário autenticado com sucesso!");
                limparLogin();
                result = true;
            
                try {
                    
                    conn.executaSql("select * from Usuario where Login = '" + NomeUsuario + "'");
                    
                    conn.rs.first();
                    nomeFuncionario = (conn.rs.getString("NomeUsuario"));
                    System.out.println(nomeFuncionario);
                    setPermissaoFunci(conn.rs.getString("Permissao"));
                     System.out.println(PermissaoFunci);
                    codFuncionario = (conn.rs.getInt("CodUsuario"));
                     System.out.println(codFuncionario);
                     this.setVisible(false);
                    //conn.desconecta();
                    new frm_home().setVisible(true);
                  
                } catch (SQLException ex) {
                    System.out.println("Erro ao conectar para trazer nome do usuário");
                    ex.printStackTrace();
                }

            } else {
                limparLogin();
                result = false;
                txtUsuario.requestFocus();
            }

        }
    }//GEN-LAST:event_btn_entrarActionPerformed

    public static int getCodFuncionario() {
        return codFuncionario;
    }

    public static void setCodFuncionario(int codFuncionario) {
        frmLogin.codFuncionario = codFuncionario;
    }

    private void btn_entrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entrar1ActionPerformed
        System.exit(0);
      //  conn.desconecta();
    }//GEN-LAST:event_btn_entrar1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
     //   conn.desconecta();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {

                    new frmLogin().setVisible(true);

                } catch (Exception ex) {
                    Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_entrar;
    private javax.swing.JButton btn_entrar1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField mtxt_senha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
public static int codFuncionario;

    String NomeUsuario;

    public boolean usuarioExiste() {
        boolean opc = false;
        try {
            if (txtUsuario.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Informe o usuário!", "Campo Obrigatório", 2);
                txtUsuario.requestFocus();
            } else {

                setUsuario(DAO.existe((String) txtUsuario.getText()));
                if (getUsuario() == null) {

                    JOptionPane.showMessageDialog(this, "Usuário não encontrado!");
                    //cmb_Usuario.setText("");
                    mtxt_senha.setText("");
                    txtUsuario.requestFocus();
                    

                } else {

                    setUsuario(DAO.existe((String) txtUsuario.getText())); //O pesquisar deve retornar a senha 
                    String senha = getUsuario().getSenha();
                    if (mtxt_senha.getText().equals(senha)) {
                        opc = true;
                    } else {
                        JOptionPane.showMessageDialog(this, "Senha Inválida");
                    }

                }
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, "Erro: " + erro.getMessage());
            erro.printStackTrace();
        }
        return opc;
    }

    public boolean validarCampos() {
        if (txtUsuario.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Informe o usuário!");
            txtUsuario.requestFocus();
            return false;
        }

        if (mtxt_senha.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Informe a senha!");
            mtxt_senha.requestFocus();
            return false;
        }
        return true;
    }

    public void limparLogin() {
        txtUsuario.setText("");
        mtxt_senha.setText("");
    }

    public boolean getResult() {
        return result;
    }

    public boolean preencherObjeto() {
        setUsuario(new clsLogin());
        getUsuario().setUsuario((String) txtUsuario.getText());
        getUsuario().setSenha(mtxt_senha.getText());

        return true;
    }

    /**
     * @return the usuario
     */
    public clsLogin getUsuario() {
        return usuario;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(clsLogin usuario) {
        this.usuario = usuario;
    }

    public static String nomeFuncionario;
    private static String PermissaoFunci;

}
